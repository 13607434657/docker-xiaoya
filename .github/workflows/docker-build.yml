name: Build and Push Multi-Architecture Docker Images

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - 'README.md'
      - 'install.sh'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
        # This is used to complete the identity challenge
        # with sigstore/fulcio when running outside of PRs.
        id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version and tags
        id: vars
        run: |
          IMAGE_PREFIX="ghcr.io/${{ github.repository_owner }}"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "ALIST_TAGS=${IMAGE_PREFIX}/xiaoya-alist:latest,${IMAGE_PREFIX}/xiaoya-alist:${VERSION}" >> $GITHUB_ENV
            echo "GLUE_TAGS=${IMAGE_PREFIX}/xiaoya-glue:latest,${IMAGE_PREFIX}/xiaoya-glue:${VERSION}" >> $GITHUB_ENV
            echo "EMBY_TAGS=${IMAGE_PREFIX}/xiaoya-emby:latest,${IMAGE_PREFIX}/xiaoya-emby:${VERSION}" >> $GITHUB_ENV
            echo "JELLYFIN_TAGS=${IMAGE_PREFIX}/xiaoya-jellyfin:latest,${IMAGE_PREFIX}/xiaoya-jellyfin:${VERSION}" >> $GITHUB_ENV
            echo "RESILIO_TAGS=${IMAGE_PREFIX}/xiaoya-resilio:latest,${IMAGE_PREFIX}/xiaoya-resilio:${VERSION}" >> $GITHUB_ENV
          else
            # 使用分支作为tag
            LATEST_TAG=${GITHUB_REF#refs/heads/}
            echo "ALIST_TAGS=${IMAGE_PREFIX}/xiaoya-alist:${LATEST_TAG}" >> $GITHUB_ENV
            echo "GLUE_TAGS=${IMAGE_PREFIX}/xiaoya-glue:${LATEST_TAG}" >> $GITHUB_ENV
            echo "EMBY_TAGS=${IMAGE_PREFIX}/xiaoya-emby:${LATEST_TAG}" >> $GITHUB_ENV
            echo "JELLYFIN_TAGS=${IMAGE_PREFIX}/xiaoya-jellyfin:${LATEST_TAG}" >> $GITHUB_ENV
            echo "RESILIO_TAGS=${IMAGE_PREFIX}/xiaoya-resilio:${LATEST_TAG}" >> $GITHUB_ENV
          fi

      - name: Build and push xiaoya-alist
        uses: docker/build-push-action@v4
        with:
          context: ./alist
          push: true
          tags: ${{ env.ALIST_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push xiaoya-glue
        uses: docker/build-push-action@v4
        with:
          context: ./glue
          push: true
          tags: ${{ env.GLUE_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push xiaoya-emby
        uses: docker/build-push-action@v4
        with:
          context: ./emby
          push: true
          tags: ${{ env.EMBY_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push xiaoya-jellyfin
        uses: docker/build-push-action@v4
        with:
          context: ./jellyfin
          push: true
          tags: ${{ env.JELLYFIN_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
            
      - name: Build and push xiaoya-resilio
        uses: docker/build-push-action@v4
        with:
          context: ./resilio
          push: true
          tags: ${{ env.RESILIO_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
            